@model DocumoWeb.Models.HomeModel

@{
    Layout = "_Layout";
}

<h1 class="title is-1">Documo</h1>

<div class="section sidebar is-pulled-left">
    <h3 class="subtitle is-4">Templates</h3>
    <div class="container">
        <ul>
            @foreach (var templateType in Model.TemplateTypes)
            {
                <li>
                    <a class="template-type" 
                       data-template-url="@Url.Action("GetInvoiceTemplate", "Home", new {id = templateType.Key})"
                       data-html-code-url="@Url.Action("GetInvoiceTemplateHtmlCode", "Home", new {id = templateType.Key})">
                        @templateType.Value
                    </a>
                </li>
            }
        </ul>
    </div>
</div>

<div class="columns">
    <div class="column">
        <h3 class="subtitle is-4">Html</h3>
        <div class="tabs">
            <ul>
                <li class="is-active">
                    <a id="template-tab">Template</a>
                </li>
                <li>
                    <a id="code-tab">Code</a>
                </li>
            </ul>
        </div>

        <div id="template-form-container" class="container">
            <div id="invoice-template">
                @* @Html.Partial("_Template.cshtml") *@
            </div>
        </div>

        <div id="code-form-container" class="container is-hidden">
            @using (Html.BeginForm("Render", "Home", FormMethod.Post, new {@id = "code-form", target = "pdf"}))
            {
                @Html.TextAreaFor(o => o.Html, new {@id = "code-textarea"})
            }
            <input id="render" class="button is-primary margin-10" type="submit" value="Render">
        </div>

    </div>

    <div class="column">
        <h3 class="subtitle is-4">Rendered Pdf</h3>
        <div class="container">
            <iframe id="pdf" width="100%" height="800px" type="application/pdf" name="pdf"></iframe>
        </div>

    </div>
</div>
<script src="js/pdfObject/pdfobject.js"></script>
<script src="~/js/codemirror/lib/codemirror.js"></script>
<link rel="stylesheet" href="~/js/codemirror/lib/codemirror.css">
<link rel="stylesheet" href="~/js/codemirror/theme/base16-light.css">
<script src="~/js/codemirror/mode/xml/xml.js"></script>
<script src="~/js/codemirror/mode/css/css.js"></script>
<script src="~/js/codemirror/mode/htmlmixed/htmlmixed.js"></script>
<script>

$( document ).ready(function() {

    let codeArea = CodeMirror.fromTextArea(document.getElementById('code-textarea'), {
       value: document.getElementById('code-textarea').value,
       mode: "htmlmixed",
       theme: "base16-light",
       extraKeys: {"Ctrl-Space": "autocomplete"},
       lineNumbers: true,
       autoRefresh: true,
       autoFocus: true,
    });
    codeArea.refresh();
    codeArea.setSize(840, 700);
           
    $('#template-tab').click(function(){
       var tab = $(this);
       $('#template-form-container').removeClass('is-hidden');
       tab.parent('li').addClass('is-active');
       $('#code-tab').parent('li').removeClass('is-active');
       $('#code-form-container').addClass('is-hidden');

    });
    
    $('#code-tab').click(function(){
       var tab = $(this);
       $('#code-form-container').removeClass('is-hidden');
       tab.parent('li').addClass('is-active');
       $('#template-tab').parent('li').removeClass('is-active');
       $('#template-form-container').addClass('is-hidden');
       codeArea.refresh();
    });
              
    $('#render').click(function(e) {
         
         var url = $('#render').data('url');
         codeArea.save();
         var content = codeArea.getValue();
         debugger;
         $('#code-form').submit();
         // debugger;
         // $.get(url, function(data) {
         //   let blob = new Blob([data.data], { type: "application/pdf" } );
         //   let u = window.URL.createObjectURL(blob);
         //   debugger;
         //   $("#pdf").html(
         //       $('<iframe>', {
         //           src: u,
         //           width:'600px',
         //           height: "800px",
         //           type: "application/pdf"
         //       })
         //   );
         // }).fail((function(data) {
         //   console.log(data.error)
         // }));

                  
         //window.open('@Url.Action("Render", "Home")', '_blank');

         
                    // $("#pdf").html(
                    //     $('<embed>', {
                    //         src: '@Url.Action("Render", "Home", new {})',
                    //         width:'600px',
                    //         height: "800px",
                    //         type: "application/pdf"
                    //     })
                    // );
     
     });
     
          $('.template-type').click(function(){      
              var templateUrl = $(this).data('template-url');
              debugger;
              $("#invoice-template").html(
                  $('<iframe>', {
                      src: templateUrl,
                      width:'840px',
                      height: "800px",
                      type: "text/html",
                      class: "frame"
                  })
              );
       
              var htmlCodeUrl = $(this).data('html-code-url');
               $.get(htmlCodeUrl, function(data) {
                 codeArea.getDoc().setValue(data);       
               }).fail((function(data) {
                  console.log(data.error);
               })).then(function() {
                 codeArea.refresh();
               });
          });
     
     
     
});



//PDFObject.embed("pdf/OutputPdf.pdf", "#pdf");

</script>
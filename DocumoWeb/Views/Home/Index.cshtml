@model DocumoWeb.Models.HomeModel

@{
    Layout = "_Layout";
}

<h1 class="title is-1">Documo</h1>

<div class="section sidebar is-pulled-left">
    <h3 class="subtitle is-4">Templates</h3>
    <div class="container">
        <ul>
            @foreach (var templateType in Model.TemplateTypes)
            {
                <li>
                    <a class="template-type" 
                       data-template-url="@Url.Action("GetInvoiceTemplate", "Home", new {id = templateType.Key})"
                       data-html-code-url="@Url.Action("GetInvoiceTemplateHtmlCode", "Home", new {id = templateType.Key})">
                        @templateType.Value
                    </a>
                </li>
            }
        </ul>
    </div>
</div>

<div class="columns">
    <div class="column">
        <h3 class="subtitle is-4">Html</h3>
        <div class="tabs">
            <ul>
                <li class="is-active">
                    <a id="template-tab" data-url="@Url.Action("RenderHtml", "Home")">Template</a>
                </li>
                <li>
                    <a id="code-tab">Code</a>
                </li>
                <li>
                    <a id="editor-tab">Editor</a>
                </li>
            </ul>
        </div>

        <div id="template-form-container" class="container">
            <div id="invoice-template" class="template-container">

            </div>
        </div>

        <div id="code-form-container" class="container is-hidden">
            @using (Html.BeginForm("Render", "Home", FormMethod.Post, new {@id = "code-form", target = "pdf"}))
            {
                @Html.TextAreaFor(o => o.Html, new {@id = "code-textarea"})
            }
            <input id="render-code-form" class="button is-primary margin-10" type="submit" value="Render">
        </div>
        
        <div id="editor-form-container" class="container editor-container is-hidden">
            @using (Html.BeginForm("Render", "Home", FormMethod.Post, new {@id = "editor-form", @class="editor-container", target = "pdf"}))
            {
                @Html.TextAreaFor(o => o.Html, new {@id = "editor-textarea"})
            }
            <input id="render-editor-form" class="button is-primary margin-10" type="submit" value="Render">
        </div>

    </div>

    <div class="column">
        <h3 class="subtitle is-4">Rendered Pdf</h3>
        <div class="container">
            <iframe class="frame" id="pdf" width="840px" height="800px" type="application/pdf" name="pdf"></iframe>
        </div>

    </div>
</div>
<script src="js/pdfObject/pdfobject.js"></script>
<script src="~/js/codemirror/lib/codemirror.js"></script>
<link rel="stylesheet" href="~/js/codemirror/lib/codemirror.css">
<link rel="stylesheet" href="~/js/codemirror/theme/base16-light.css">
<script src="~/js/codemirror/mode/xml/xml.js"></script>
<script src="~/js/codemirror/mode/css/css.js"></script>
<script src="~/js/codemirror/mode/htmlmixed/htmlmixed.js"></script>
<script src="https://cdn.tiny.cloud/1/698sacjegdbnfywvvw94gljncdsjgh1oqgfg19xq1yk93trd/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/js-beautify/1.10.3/beautify-html.js"></script>
<script>
   
$( document ).ready(function() {
    let codeArea;
    
    window.onload = function(){
        codeArea = CodeMirror.fromTextArea(document.getElementById('code-textarea'), {
           value: document.getElementById('code-textarea').value,
           mode: "htmlmixed",
           theme: "base16-light",
           extraKeys: {"Ctrl-Space": "autocomplete"},
           lineNumbers: true,
           autoRefresh: true,
           autoFocus: true,
        });
        codeArea.refresh();
        codeArea.setSize(840, 700);        
    };
    
   tinymce.init({
      selector: '#editor-textarea',
        plugins: "table image",
        height: 800,
        setup: function (editor) {
          editor.on('SaveContent', function (e) 
          {
              e.content = tinymce.activeEditor.contentDocument.documentElement.outerHTML;
          });
        }
      });


    $('#template-tab').click(function(){
        let tab = $(this);
        $('#template-form-container').removeClass('is-hidden');
        tab.parent('li').addClass('is-active');
        $('#code-tab').parent('li').removeClass('is-active');
        $('#code-form-container').addClass('is-hidden');
        $('#editor-tab').parent('li').removeClass('is-active');
        $('#editor-form-container').addClass('is-hidden');
        codeArea.save();
        let content = codeArea.getValue();
        let url = $(this).data('url');
       
        $.post( url, { html: content }, function(data) {
             let frame = $('<iframe>', {
                 type: "text/html",
                 width: "840px",
                 height: "800px",
                 class: "frame"
             });
             $("#invoice-template").html(frame);
             frame.contents().find('html').html(data);
        } ).fail(function(data) {
            console.log(data.error);
        });
    });
    
    $('#code-tab').click(function(){
        let tab = $(this);
        $('#code-form-container').removeClass('is-hidden');
        tab.parent('li').addClass('is-active');
        $('#template-tab').parent('li').removeClass('is-active');
        $('#template-form-container').addClass('is-hidden');
        $('#editor-tab').parent('li').removeClass('is-active');
        $('#editor-form-container').addClass('is-hidden');
        
        let editorContent = tinymce.activeEditor.contentDocument.documentElement.outerHTML;
        let formattedContent = html_beautify(editorContent);
        codeArea.getDoc().setValue(formattedContent);
        codeArea.refresh();
    });
    
    $('#editor-tab').click(function(){
        let tab = $(this);
        $('#editor-form-container').removeClass('is-hidden');
        tab.parent('li').addClass('is-active');
        $('#template-tab').parent('li').removeClass('is-active');
        $('#code-tab').parent('li').removeClass('is-active');
        $('#template-form-container').addClass('is-hidden');
        $('#code-form-container').addClass('is-hidden');
        
        codeArea.save();
        let content = codeArea.getValue();
        tinymce.activeEditor.setContent(content);
    }); 
    
    $('#render-code-form').click(function(e) {
         codeArea.save();
         $('#code-form').submit();
     });
    
    $('#render-editor-form').click(function() {
         $('#editor-form').submit();        
     });
     
    $('.template-type').click(function(){      
        let templateUrl = $(this).data('template-url');
        $("#invoice-template").html(
            $('<iframe>', {
                src: templateUrl,
                type: "text/html",
                width: "840px",
                height: "800px",
                class: "frame"
            })
        );       
   
        let htmlCodeUrl = $(this).data('html-code-url');
        $.get(htmlCodeUrl, function(data) {
          codeArea.getDoc().setValue(data);       
        }).fail((function(data) {
           console.log(data.error);
        })).then(function() {
          codeArea.refresh();
        });
    });
});

</script>